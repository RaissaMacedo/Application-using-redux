{"ast":null,"code":"import { call, select, put, all, takeLatest } from 'redux-saga/effects'; // middleware\nimport { addReserveSuccess } from './actions';\nimport api from '../../../services/api';\n//generate\n//yield igual o  await\nfunction addToReserve(_ref) {\n  let {\n    id\n  } = _ref;\n  return function* () {\n    const tripExists = yield select(state => state.reserve.find(trip => trip.id === 1));\n    if (tripExists) {\n      // aumentar amounts\n    } else {\n      // fazendo a requisição\n      const response = yield call(api.get, `trips/${id}`);\n      const data = {\n        ...response.data,\n        amount: 1\n      };\n\n      // disparando essa action e passando para o reducer\n      yield put(addReserveSuccess(data));\n    }\n  }();\n}\n// se cliclar 2 vezes e ainda não tiver terminando a primeira requisição\n// ele só vai pegar a ultima requsição\nexport default all([takeLatest('ADD_RESERVE_REQUEST', addToReserve)]);","map":{"version":3,"names":["call","select","put","all","takeLatest","addReserveSuccess","api","addToReserve","_ref","id","tripExists","state","reserve","find","trip","response","get","data","amount"],"sources":["/home/raissa/Documentos/Projetos-dev/REACT/Redux/src/store/modules/reserve/sagas.js"],"sourcesContent":["import { call, select, put, all, takeLatest } from 'redux-saga/effects'; // middleware\nimport { addReserveSuccess } from './actions';\nimport api from '../../../services/api';\n//generate\n//yield igual o  await\nfunction* addToReserve({ id }) {\n  const tripExists = yield select((state) =>\n    state.reserve.find((trip) => trip.id === 1),\n  );\n  if (tripExists) {\n    // aumentar amounts\n  } else {\n    // fazendo a requisição\n    const response = yield call(api.get, `trips/${id}`);\n\n    const data = {\n      ...response.data,\n      amount: 1,\n    };\n\n    // disparando essa action e passando para o reducer\n    yield put(addReserveSuccess(data));\n  }\n}\n// se cliclar 2 vezes e ainda não tiver terminando a primeira requisição\n// ele só vai pegar a ultima requsição\nexport default all([takeLatest('ADD_RESERVE_REQUEST', addToReserve)]);\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB,CAAC,CAAC;AACzE,SAASC,iBAAiB,QAAQ,WAAW;AAC7C,OAAOC,GAAG,MAAM,uBAAuB;AACvC;AACA;AACA,SAAUC,YAAYA,CAAAC,IAAA;EAAA,IAAC;IAAEC;EAAG,CAAC,GAAAD,IAAA;EAAA,oBAAE;IAC7B,MAAME,UAAU,GAAG,MAAMT,MAAM,CAAEU,KAAK,IACpCA,KAAK,CAACC,OAAO,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAK,CAAC,CAAC,CAC5C;IACD,IAAIC,UAAU,EAAE;MACd;IAAA,CACD,MAAM;MACL;MACA,MAAMK,QAAQ,GAAG,MAAMf,IAAI,CAACM,GAAG,CAACU,GAAG,EAAG,SAAQP,EAAG,EAAC,CAAC;MAEnD,MAAMQ,IAAI,GAAG;QACX,GAAGF,QAAQ,CAACE,IAAI;QAChBC,MAAM,EAAE;MACV,CAAC;;MAED;MACA,MAAMhB,GAAG,CAACG,iBAAiB,CAACY,IAAI,CAAC,CAAC;IACpC;EACF,CAAC;AAAA;AACD;AACA;AACA,eAAed,GAAG,CAAC,CAACC,UAAU,CAAC,qBAAqB,EAAEG,YAAY,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}